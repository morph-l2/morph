version: '3.4'

volumes:
  l1_execution:
  l1_consensus:
  postgres_data:
  morph_data_0:
  morph_data_1:
  morph_data_2:
  morph_data_3:
  sentry_geth_data:
  node_data_0:
  node_data_1:
  node_data_2:
  node_data_3:
  sentry_node_data:
  validator_geth_data:
  validator_node_data:

services:
    # Runs a Prysm beacon chain from a specified genesis state created in the previous step
    # and connects to go-ethereum in the same network as the execution client.
    # The account used in go-ethereum is set as the suggested fee recipient for transactions
    # proposed via the validators attached to the beacon node.
  beacon-chain:
      container_name: l1-beacon-chain
#      image: gcr.io/prysmaticlabs/prysm/beacon-chain:v4.2.1
      image: morph-beacon-chain
      build:
        context: ../..
        dockerfile: ops/docker/Dockerfile.l1-beacon
        target: beacon-chain
      command:
        - --datadir=/consensus/beacondata
        - --min-sync-peers=0
        - --genesis-state=/consensus/genesis.ssz
        - --bootstrap-node=
        - --interop-eth1data-votes
        - --chain-config-file=/consensus/config.yml
        - --contract-deployment-block=0
        - --chain-id=${CHAIN_ID:-900}
        - --rpc-host=0.0.0.0
        - --grpc-gateway-host=0.0.0.0
        - --execution-endpoint=http://l1:8551
        - --accept-terms-of-use
        - --jwt-secret=/execution/jwtsecret
        - --suggested-fee-recipient=0xca062b0fd91172d89bcd4bb084ac4e21972cc467
        - --minimum-peers-per-subnet=0
        - --enable-debug-rpc-endpoints
        - --force-clear-db
#      depends_on:
#        chain-genesis:
#          condition: service_completed_successfully
      ports:
        - 4000:4000
        - 3500:3500
        - 8080:8080
        - 6060:6060
        - 9090:9090
      volumes:
        - l1_consensus:/consensus
        - l1_execution:/execution

    # We run a validator client with 64, deterministically-generated keys that match
    # The validator keys present in the beacon chain genesis state generated a few steps above.
  validator:
    container_name: l1-validator
    image: gcr.io/prysmaticlabs/prysm/validator:v4.2.1
    command:
      - --beacon-rpc-provider=beacon-chain:4000
      - --datadir=/consensus/validatordata
      - --accept-terms-of-use
      - --interop-num-validators=64
      - --interop-start-index=0
      - --chain-config-file=/consensus/config.yml
      - --force-clear-db
    depends_on:
      beacon-chain:
        condition: service_started
    volumes:
      - l1_consensus:/consensus
      - l1_execution:/execution

    # Runs the go-ethereum execution client with the specified, unlocked account and necessary
    # APIs to allow for proof-of-stake consensus via Prysm.
  l1:
    container_name: l1-geth
    image: ethereum/client-go:v1.13.12
    command:
      - --http
      - --http.api=web3,debug,eth,txpool,net,engine
      - --http.addr=0.0.0.0
      - --http.corsdomain=*
      - --http.vhosts=*
      - --ws
      - --ws.api=web3,debug,eth,txpool,net,engine
      - --ws.addr=0.0.0.0
      - --ws.origins=*
      - --authrpc.vhosts=*
      - --authrpc.addr=0.0.0.0
      - --authrpc.jwtsecret=/execution/jwtsecret
      - --datadir=/execution
      - --allow-insecure-unlock
      - --unlock=0xca062b0fd91172d89bcd4bb084ac4e21972cc467
      - --password=/execution/password
      - --nodiscover
      - --syncmode=full
    ports:
      - 8551:8551
      - 9545:8545
      - 9546:8546
    depends_on:
#      geth-genesis:
#        condition: service_completed_successfully
      beacon-chain:
        condition: service_started
      validator:
        condition: service_started
    volumes:
      - l1_execution:/execution
      - l1_consensus:/consensus

  morph-geth-0:
    container_name: morph-geth-0
    depends_on:
      l1:
        condition: service_started
    image: morph-geth:latest
    build:
      context: ../..
      dockerfile: ops/docker/Dockerfile.l2-geth
      target: ${BUILD_GETH}
    restart: unless-stopped
    ports:
      - "8545:8545"
      - "8546:8546"
      - "8551"
      - "6060"
      - "30303"
    volumes:
      - "morph_data_0:/db"
      - "${PWD}/jwt-secret.txt:/jwt-secret.txt"
      - "${PWD}/../L2-genesis/.devnet/genesis-l2.json:/genesis.json"
      - "${PWD}/nodekey0:/db/geth/nodekey"
    environment:
      - RUST_LOG=${RUST_LOG}
    entrypoint:
      - "/bin/bash"
      - "/entrypoint.sh"

  morph-geth-1:
    container_name: morph-geth-1
    depends_on:
      - morph-geth-0
    image: morph-geth:latest
    restart: unless-stopped
    ports:
      - "8645:8545"
      - "8646:8546"
      - "8551"
      - "6060"
      - "30303"
    volumes:
      - "morph_data_1:/db"
      - "${PWD}/jwt-secret.txt:/jwt-secret.txt"
      - "${PWD}/../L2-genesis/.devnet/genesis-l2.json:/genesis.json"
      - "${PWD}/nodekey1:/db/geth/nodekey"
      - "${PWD}/static-nodes.json:/db/geth/static-nodes.json"
    environment:
      - RUST_LOG=${RUST_LOG}
    entrypoint:
      - "/bin/bash"
      - "/entrypoint.sh"

  morph-geth-2:
    container_name: morph-geth-2
    depends_on:
      - morph-geth-0
    image: morph-geth:latest
    restart: unless-stopped
    ports:
      - "8745:8545"
      - "8746:8546"
      - "8551"
      - "6060"
      - "30303"
    volumes:
      - "morph_data_2:/db"
      - "${PWD}/jwt-secret.txt:/jwt-secret.txt"
      - "${PWD}/../L2-genesis/.devnet/genesis-l2.json:/genesis.json"
      - "${PWD}/nodekey2:/db/geth/nodekey"
      - "${PWD}/static-nodes.json:/db/geth/static-nodes.json"
    environment:
      - RUST_LOG=${RUST_LOG}
    entrypoint:
      - "/bin/bash"
      - "/entrypoint.sh"

  morph-geth-3:
    container_name: morph-geth-3
    depends_on:
      - morph-geth-0
    image: morph-geth:latest
    restart: unless-stopped
    ports:
      - "8845:8545"
      - "8846:8546"
      - "8551"
      - "6060"
      - "30303"
    volumes:
      - "morph_data_3:/db"
      - "${PWD}/jwt-secret.txt:/jwt-secret.txt"
      - "${PWD}/../L2-genesis/.devnet/genesis-l2.json:/genesis.json"
      - "${PWD}/nodekey3:/db/geth/nodekey"
      - "${PWD}/static-nodes.json:/db/geth/static-nodes.json"
    environment:
      - RUST_LOG=${RUST_LOG}
    entrypoint:
      - "/bin/bash"
      - "/entrypoint.sh"


  node-0:
    container_name: node-0
    depends_on:
      morph-geth-0:
        condition: service_started
    image: morph-node-0:latest
    build:
      context: ../..
      dockerfile: ops/docker/Dockerfile.l2-node-4
      target: node0
    restart: unless-stopped
    ports:
      - "26656"
      - "26657:26657"
      - "26658"
      - "26660"
    environment:
      - MORPH_NODE_L2_ETH_RPC=http://morph-geth-0:8545
      - MORPH_NODE_L2_ENGINE_RPC=http://morph-geth-0:8551
      - MORPH_NODE_L2_ENGINE_AUTH=jwt-secret.txt
      - MORPH_NODE_L1_ETH_RPC=${L1_ETH_RPC}
      - MORPH_NODE_SYNC_DEPOSIT_CONTRACT_ADDRESS=${MORPH_PORTAL:-0x6900000000000000000000000000000000000001}
      - MORPH_NODE_L1_CONFIRMATIONS=0
      - MORPH_NODE_SYNC_START_HEIGHT=${MORPH_NODE_SYNC_START_HEIGHT:-1}
    volumes:
      - "node_data_0:${NODE_DATA_DIR}"
      - "${PWD}/jwt-secret.txt:${JWT_SECRET_PATH}"
    command: >
      morphnode
      --home $NODE_DATA_DIR

  node-1:
    container_name: node-1
    depends_on:
      morph-geth-1:
        condition: service_started
      node-0:
        condition: service_started
    image: morph-node-1:latest
    build:
      context: ../..
      dockerfile: ops/docker/Dockerfile.l2-node-4
      target: node1
    restart: unless-stopped
    ports:
      - "26656"
      - "26657"
      - "26658"
      - "26660"
    environment:
      - MORPH_NODE_L2_ETH_RPC=http://morph-geth-1:8545
      - MORPH_NODE_L2_ENGINE_RPC=http://morph-geth-1:8551
      - MORPH_NODE_L2_ENGINE_AUTH=jwt-secret.txt
      - MORPH_NODE_L1_ETH_RPC=${L1_ETH_RPC}
      - MORPH_NODE_SYNC_DEPOSIT_CONTRACT_ADDRESS=${MORPH_PORTAL:-0x6900000000000000000000000000000000000001}
      - MORPH_NODE_L1_CONFIRMATIONS=0
      - MORPH_NODE_SYNC_START_HEIGHT=${MORPH_NODE_SYNC_START_HEIGHT:-1}
    volumes:
      - "node_data_1:${NODE_DATA_DIR}"
      - "${PWD}/jwt-secret.txt:${JWT_SECRET_PATH}"
    command: >
      morphnode
      --home $NODE_DATA_DIR

  node-2:
    container_name: node-2
    depends_on:
      morph-geth-2:
        condition: service_started
      node-0:
        condition: service_started
    image: morph-node-2:latest
    build:
      context: ../..
      dockerfile: ops/docker/Dockerfile.l2-node-4
      target: node2
    restart: unless-stopped
    ports:
      - "26656"
      - "26657"
      - "26658"
      - "26660"
    environment:
      - EMPTY_BLOCK_DELAY=true
      - MORPH_NODE_L2_ETH_RPC=http://morph-geth-2:8545
      - MORPH_NODE_L2_ENGINE_RPC=http://morph-geth-2:8551
      - MORPH_NODE_L2_ENGINE_AUTH=jwt-secret.txt
      - MORPH_NODE_L1_ETH_RPC=${L1_ETH_RPC}
      - MORPH_NODE_SYNC_DEPOSIT_CONTRACT_ADDRESS=${MORPH_PORTAL:-0x6900000000000000000000000000000000000001}
      - MORPH_NODE_L1_CONFIRMATIONS=0
      - MORPH_NODE_SYNC_START_HEIGHT=${MORPH_NODE_SYNC_START_HEIGHT:-1}
    volumes:
      - "node_data_2:${NODE_DATA_DIR}"
      - "${PWD}/jwt-secret.txt:${JWT_SECRET_PATH}"
    command: >
      morphnode
      --home $NODE_DATA_DIR

  node-3:
    container_name: node-3
    depends_on:
      morph-geth-3:
        condition: service_started
      node-0:
        condition: service_started
    image: morph-node-3:latest
    build:
      context: ../..
      dockerfile: ops/docker/Dockerfile.l2-node-4
      target: node3
    restart: unless-stopped
    ports:
      - "26656"
      - "26657"
      - "26658"
      - "26660"
    environment:
      - EMPTY_BLOCK_DELAY=true
      - MORPH_NODE_L2_ETH_RPC=http://morph-geth-3:8545
      - MORPH_NODE_L2_ENGINE_RPC=http://morph-geth-3:8551
      - MORPH_NODE_L2_ENGINE_AUTH=jwt-secret.txt
      - MORPH_NODE_L1_ETH_RPC=${L1_ETH_RPC}
      - MORPH_NODE_SYNC_DEPOSIT_CONTRACT_ADDRESS=${MORPH_PORTAL:-0x6900000000000000000000000000000000000001}
      - MORPH_NODE_L1_CONFIRMATIONS=0
      - MORPH_NODE_SYNC_START_HEIGHT=${MORPH_NODE_SYNC_START_HEIGHT:-1}
    volumes:
      - "node_data_3:${NODE_DATA_DIR}"
      - "${PWD}/jwt-secret.txt:${JWT_SECRET_PATH}"
    command: >
      morphnode
      --home $NODE_DATA_DIR

  sentry-geth-0:
    container_name: sentry-geth-0
    depends_on:
      node-3:
        condition: service_started
    image: sentry-geth:latest
    build:
      context: ../..
      dockerfile: ops/docker/Dockerfile.l2-geth-sentry
    restart: unless-stopped
    ports:
      - "8945:8545"
      - "8946:8546"
      - "8551"
      - "6060"
      - "30303"
    volumes:
      - "sentry_geth_data:/db"
      - "${PWD}/jwt-secret.txt:/jwt-secret.txt"
      - "${PWD}/../L2-genesis/.devnet/genesis-l2.json:/genesis.json"
      - "${PWD}/static-nodes.json:/db/geth/static-nodes.json"
    entrypoint:
      - "/bin/sh"
      - "/entrypoint.sh"

  sentry-node-0:
    container_name: sentry-node-0
    depends_on:
      sentry-geth-0:
        condition: service_started
    image: sentry-node-0:latest
    build:
      context: ../..
      dockerfile: ops/docker/Dockerfile.l2-node-4
      target: sentry0
    restart: unless-stopped
    ports:
      - "26656"
      - "26657"
      - "26658"
      - "26660"
    environment:
      - EMPTY_BLOCK_DELAY=true
      - MORPH_NODE_L2_ETH_RPC=http://sentry-geth-0:8545
      - MORPH_NODE_L2_ENGINE_RPC=http://sentry-geth-0:8551
      - MORPH_NODE_L2_ENGINE_AUTH=jwt-secret.txt
      - MORPH_NODE_L1_ETH_RPC=${L1_ETH_RPC}
      - MORPH_NODE_SYNC_DEPOSIT_CONTRACT_ADDRESS=${MORPH_PORTAL:-0x6900000000000000000000000000000000000001}
      - MORPH_NODE_L1_CONFIRMATIONS=0
      - MORPH_NODE_SYNC_START_HEIGHT=${MORPH_NODE_SYNC_START_HEIGHT:-1}
    volumes:
      - "sentry_node_data:${NODE_DATA_DIR}"
      - "${PWD}/jwt-secret.txt:${JWT_SECRET_PATH}"
    command: >
      morphnode
      --home $NODE_DATA_DIR    
    

  validator_geth:
    container_name: validator_geth
    image: sentry-geth:latest
    depends_on:
      tx-submitter-0:
        condition: service_started
    ports:
      - "7545:8545"
      - "7546:8546"
      - "7551:8551"
    healthcheck:
      test: curl -f http://localhost:8545
      interval: 30s
      timeout: 5s
      retries: 3
    volumes:
      - "validator_geth_data:${GETH_DATA_DIR}"
      - "${PWD}/jwt-secret.txt:${JWT_SECRET_PATH}"
      - "${PWD}/../L2-genesis/.devnet/genesis-l2.json:/genesis.json"
    entrypoint: # pass the L2 specific flags by overriding the entry-point and adding extra arguments
      - "/bin/bash"
      - "/entrypoint.sh"

  validator_node:
    container_name: validator_node
    depends_on:
      validator_geth:
          condition: service_started
    build:
      context: ../..
      dockerfile: ops/docker/Dockerfile.l2-node-1
    image: morph-node:latest
    ports:
      - "26660"
    environment:
      - MORPH_NODE_L2_ETH_RPC=http://validator_geth:8545
      - MORPH_NODE_L2_ENGINE_RPC=http://validator_geth:8551
      - MORPH_NODE_L2_ENGINE_AUTH=jwt-secret.txt
      ## todo need to replace it to a public network
      - MORPH_NODE_L1_ETH_RPC=${L1_ETH_RPC}
      - MORPH_NODE_SYNC_DEPOSIT_CONTRACT_ADDRESS=${MORPH_PORTAL:-0x6900000000000000000000000000000000000001}
      - MORPH_NODE_VALIDATOR_PRIVATE_KEY=ac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80
      - MORPH_NODE_ROLLUP_ADDRESS=${MORPH_ROLLUP:-0x6900000000000000000000000000000000000010}
      - MORPH_NODE_DERIVATION_START_HEIGHT=1
      - MORPH_NODE_SYNC_START_HEIGHT=1
      - MORPH_NODE_DERIVATION_FETCH_BLOCK_RANGE=5000
      - MORPH_NODE_L1_CHAIN_ID=900
      - MORPH_NODE_VALIDATOR=true
      - MORPH_NODE_MOCK_SEQUENCER=false
      - MORPH_NODE_L1_CONFIRMATIONS=1
      - MORPH_NODE_METRICS_SERVER_ENABLE=true
      - MORPH_NODE_METRICS_PORT=26660
    volumes:
      - "validator_node_data:${NODE_DATA_DIR}"
      - "${PWD}/jwt-secret.txt:${JWT_SECRET_PATH}"
    command: >
      morphnode
      --validator
      --home $NODE_DATA_DIR

  tx-submitter-0:
    container_name:   tx-submitter-0
    depends_on:
      node-0:
        condition: service_started
    build:
      context: ../..
      dockerfile: ops/docker/Dockerfile.submitter
    image: morph-tx-submitter:latest
    restart: unless-stopped
    command: tx-submitter
    ports:
      - "8060:6060"
    environment:
      # change the env variables to your own
      - TX_SUBMITTER_BUILD_ENV=dev
      - TX_SUBMITTER_L1_ETH_RPC=${L1_ETH_RPC}
      - TX_SUBMITTER_L1_PRIVATE_KEY=0xd99870855d97327d20c666abc78588f1449b1fac76ed0c86c1afb9ce2db85f32
      - TX_SUBMITTER_L2_ETH_RPCS=http://morph-geth-0:8545,http://morph-geth-1:8545
      - TX_SUBMITTER_MAX_BATCH_BUILD_TIME=60s
      - TX_SUBMITTER_MAX_TX_SIZE=125952
      - TX_SUBMITTER_POLL_INTERVAL=3s
      - TX_SUBMITTER_SAFE_MINIMUM_ETHER_BALANCE=1
      - TX_SUBMITTER_TX_TIMEOUT=60s
      - TX_SUBMITTER_ROLLUP_ADDRESS=${MORPH_ROLLUP:-0x6900000000000000000000000000000000000010}
      - TX_SUBMITTER_NETWORK_TIMEOUT=20s
      - TX_SUBMITTER_MAX_BLOCK=1000
      - TX_SUBMITTER_MIN_BLOCK=50
      - TX_SUBMITTER_L2_SUBMITTER_ADDRESS=0x5300000000000000000000000000000000000005
      - TX_SUBMITTER_FINALIZE=true
      - TX_SUBMITTER_MAX_FINALIZE_NUM=100
      - TX_SUBMITTER_PRIORITY_ROLLUP=false
      - TX_SUBMITTER_METRICS_SERVER_ENABLE=false
      - TX_SUBMITTER_METRICS_HOSTNAME=0.0.0.0
      - TX_SUBMITTER_METRICS_PORT=6060


  tx-submitter-1:
    container_name: tx-submitter-1
    depends_on:
      node-1:
        condition: service_started
    build:
      context: ../..
      dockerfile: ops/docker/Dockerfile.submitter
    image: morph-tx-submitter:latest
    restart: unless-stopped
    command: tx-submitter
    ports:
      - "8061:6060"
    environment:
      # change the env variables to your own
      - TX_SUBMITTER_BUILD_ENV=dev
      - TX_SUBMITTER_L1_ETH_RPC=${L1_ETH_RPC}
      - TX_SUBMITTER_L1_PRIVATE_KEY=0x0890c388c3bf5e04fee1d8f3c117e5f44f435ced7baf7bfd66c10e1f3a3f4b10
      - TX_SUBMITTER_L2_ETH_RPCS=http://morph-geth-0:8545,http://morph-geth-1:8545
      - TX_SUBMITTER_MAX_BATCH_BUILD_TIME=60s
      - TX_SUBMITTER_MAX_TX_SIZE=125952
      - TX_SUBMITTER_POLL_INTERVAL=3s
      - TX_SUBMITTER_SAFE_MINIMUM_ETHER_BALANCE=1
      - TX_SUBMITTER_TX_TIMEOUT=60s
      - TX_SUBMITTER_ROLLUP_ADDRESS=${MORPH_ROLLUP:-0x6900000000000000000000000000000000000010}
      - TX_SUBMITTER_NETWORK_TIMEOUT=20s
      - TX_SUBMITTER_MAX_BLOCK=1000
      - TX_SUBMITTER_MIN_BLOCK=50
      - TX_SUBMITTER_L2_SUBMITTER_ADDRESS=0x5300000000000000000000000000000000000005
      - TX_SUBMITTER_FINALIZE=false
      - TX_SUBMITTER_MAX_FINALIZE_NUM=100
      - TX_SUBMITTER_PRIORITY_ROLLUP=false
      - TX_SUBMITTER_METRICS_SERVER_ENABLE=false
      - TX_SUBMITTER_METRICS_HOSTNAME=0.0.0.0
      - TX_SUBMITTER_METRICS_PORT=6060



  tx-submitter-2:
    container_name: tx-submitter-2
    depends_on:
      node-2:
        condition: service_started
    build:
      context: ../..
      dockerfile: ops/docker/Dockerfile.submitter
    image: morph-tx-submitter:latest
    restart: unless-stopped
    command: tx-submitter
    ports:
      - "8062:6060"
    environment:
      # change the env variables to your own
      - TX_SUBMITTER_BUILD_ENV=dev
      - TX_SUBMITTER_L1_ETH_RPC=${L1_ETH_RPC}
      - TX_SUBMITTER_L1_PRIVATE_KEY=0x6fd437eef7a83c486bd2e0a802ae071b3912d125ac31ac08f60841fd891559ae
      - TX_SUBMITTER_L2_ETH_RPCS=http://morph-geth-2:8545,http://morph-geth-3:8545
      - TX_SUBMITTER_MAX_BATCH_BUILD_TIME=60s
      - TX_SUBMITTER_MAX_TX_SIZE=125952
      - TX_SUBMITTER_POLL_INTERVAL=3s
      - TX_SUBMITTER_SAFE_MINIMUM_ETHER_BALANCE=1
      - TX_SUBMITTER_TX_TIMEOUT=60s
      - TX_SUBMITTER_ROLLUP_ADDRESS=${MORPH_ROLLUP:-0x6900000000000000000000000000000000000010}
      - TX_SUBMITTER_NETWORK_TIMEOUT=20s
      - TX_SUBMITTER_MAX_BLOCK=1000
      - TX_SUBMITTER_MIN_BLOCK=50
      - TX_SUBMITTER_L2_SUBMITTER_ADDRESS=0x5300000000000000000000000000000000000005
      - TX_SUBMITTER_FINALIZE=false
      - TX_SUBMITTER_MAX_FINALIZE_NUM=100
      - TX_SUBMITTER_PRIORITY_ROLLUP=false
      - TX_SUBMITTER_METRICS_SERVER_ENABLE=false
      - TX_SUBMITTER_METRICS_HOSTNAME=0.0.0.0
      - TX_SUBMITTER_METRICS_PORT=6060


  tx-submitter-3:
    container_name: tx-submitter-3
    depends_on:
      node-3:
        condition: service_started
    build:
      context: ../..
      dockerfile: ops/docker/Dockerfile.submitter
    image: morph-tx-submitter:latest
    restart: unless-stopped
    command: tx-submitter
    ports:
      - "8063:6060"
    environment:
      # change the env variables to your own
      - TX_SUBMITTER_BUILD_ENV=dev
      - TX_SUBMITTER_L1_ETH_RPC=${L1_ETH_RPC}
      - TX_SUBMITTER_L1_PRIVATE_KEY=0x9ae53aecdaebe4dcbfec96f3123a2a8c53f9596bf4b3d5adc9a388ccb361b4c0
      - TX_SUBMITTER_L2_ETH_RPCS=http://morph-geth-2:8545,http://morph-geth-3:8545
      - TX_SUBMITTER_MAX_BATCH_BUILD_TIME=60s
      - TX_SUBMITTER_MAX_TX_SIZE=125952
      - TX_SUBMITTER_POLL_INTERVAL=3s
      - TX_SUBMITTER_SAFE_MINIMUM_ETHER_BALANCE=1
      - TX_SUBMITTER_TX_TIMEOUT=60s
      - TX_SUBMITTER_ROLLUP_ADDRESS=${MORPH_ROLLUP:-0x6900000000000000000000000000000000000010}
      - TX_SUBMITTER_NETWORK_TIMEOUT=20s
      - TX_SUBMITTER_MAX_BLOCK=1000
      - TX_SUBMITTER_MIN_BLOCK=50
      - TX_SUBMITTER_L2_SUBMITTER_ADDRESS=0x5300000000000000000000000000000000000005
      - TX_SUBMITTER_FINALIZE=false
      - TX_SUBMITTER_MAX_FINALIZE_NUM=100
      - TX_SUBMITTER_PRIORITY_ROLLUP=false
      - TX_SUBMITTER_METRICS_SERVER_ENABLE=false
      - TX_SUBMITTER_METRICS_HOSTNAME=0.0.0.0
      - TX_SUBMITTER_METRICS_PORT=6060

  gas-price-oracle:
    container_name: gas-price-oracle
    depends_on:
      node-3:
        condition: service_started
    build:
      context: ../..
      dockerfile: ops/docker/Dockerfile.oracle
    image: morph-oracle:latest
    restart: unless-stopped
    ports:
      - "6070:6060"
    command: >
      ./app
    environment:
      - GAS_ORACLE_L1_RPC=${L1_ETH_RPC}
      - GAS_ORACLE_L2_RPC=http://morph-geth-0:8545
      - GAS_THRESHOLD=5
      - INTERVAL=5000
      - L2_GAS_PRICE_ORACLE=0x530000000000000000000000000000000000000F
      - L2_GAS_ORACLE_PRIVATE_KEY=0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80
      - OVERHEAD_THRESHOLD=200
      - OVERHEAD_INTERVAL=10
      - TXN_PER_BLOCK=1
      - TXN_PER_BATCH=50
      - L1_ROLLUP=${MORPH_ROLLUP:-0x6900000000000000000000000000000000000010}
