package derivation

import (
	"testing"
)

func TestDecodeBatch(t *testing.T) {
	//abi, err := bindings.RollupMetaData.GetAbi()
	//require.NoError(t, err)
	//hexData := "0x92f65af30000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008e0000000000000000000000000000000000000000000000000000000000000098000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000018000000000000000000000000000000000000000000000000000000000000006a02b8abfcc1aa740eb6330093a5ef9c1d09c39672c390926de6db9089554b620322b8abfcc1aa740eb6330093a5ef9c1d09c39672c390926de6db9089554b6203227ae5ba08d7291c96c8cbddcc148bf48a6d68c7974b94356f53754ef6171d75700000000000000000000000000000000000000000000000000000000000006c00000000000000000000000000000000000000000000000000000000000000059000000000000000127000000000000000000000000000000006a5279896e0503ca805ecdb9208afa1ae78e214ceae183cf59fba3a8788e4598b0cd5e7bf4073160681199a5f107e15ec96c350840ebedb522a79c73615037b9000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004b11400000000000015520000000065e43bfb000000000000000000000000000000000000000000000000000000000000000000000000009896800000000000000000000015530000000065e43c02000000000000000000000000000000000000000000000000000000000000000000000000009896800000000000000000000015540000000065e43c08000000000000000000000000000000000000000000000000000000000000000000000000009896800000000000000000000015550000000065e43c0f000000000000000000000000000000000000000000000000000000000000000000000000009896800000000000000000000015560000000065e43c15000000000000000000000000000000000000000000000000000000000000000000000000009896800000000000000000000015570000000065e43c1c000000000000000000000000000000000000000000000000000000000000000000000000009896800000000000000000000015580000000065e43c22000000000000000000000000000000000000000000000000000000000000000000000000009896800000000000000000000015590000000065e43c280000000000000000000000000000000000000000000000000000000000000000000000000098968000000000000000000000155a0000000065e43c2f0000000000000000000000000000000000000000000000000000000000000000000000000098968000000000000000000000155b0000000065e43c350000000000000000000000000000000000000000000000000000000000000000000000000098968000000000000000000000155c0000000065e43c3c0000000000000000000000000000000000000000000000000000000000000000000000000098968000000000000000000000155d0000000065e43c420000000000000000000000000000000000000000000000000000000000000000000000000098968000000000000000000000155e0000000065e43c490000000000000000000000000000000000000000000000000000000000000000000000000098968000000000000000000000155f0000000065e43c4f000000000000000000000000000000000000000000000000000000000000000000000000009896800000000000000000000015600000000065e43c56000000000000000000000000000000000000000000000000000000000000000000000000009896800000000000000000000015610000000065e43c5c000000000000000000000000000000000000000000000000000000000000000000000000009896800000000000000000000015620000000065e43c62000000000000000000000000000000000000000000000000000000000000000000000000009896800000000000000000000015630000000065e43c69000000000000000000000000000000000000000000000000000000000000000000000000009896800000000000000000000015640000000065e43c6f000000000000000000000000000000000000000000000000000000000000000000000000009896800000000000000000000015650000000065e43cc61193a9eca0201811fc18e071ee949910f696d7464fb3ed32ce9e9f022967f03962fb34c8533f0d01c13e808f4c000000000000000000000000000000000a066efeb662c0804b6c35a0be989a5fbd6a229261b12a176195772febca89e806e3fa2bebe19f95c7491af5afc7334e000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000001656c61193a9eca0201811fc18e071ee949910f696d7464fb3ed32ce9e9f022967f03962fb34c8533f0d01c13e808f4c000000000000000000000000000000000a066efeb662c0804b6c35a0be989a5fbd6a229261b12a176195772febca89e806e3fa2bebe19f95c7491af5afc7334e"
	//txData, err := hexutil.Decode(hexData)
	//require.NoError(t, err)
	//args, err := abi.Methods["commitBatch"].Inputs.Unpack(txData[4:])
	//require.NoError(t, err)
	//rollupBatchData := args[0].(struct {
	//	Version                uint8     "json:\"version\""
	//	ParentBatchHeader      []uint8   "json:\"parentBatchHeader\""
	//	BlockContexts          []uint8   "json:\"blockContexts\""
	//	SkippedL1MessageBitmap []uint8   "json:\"skippedL1MessageBitmap\""
	//	PrevStateRoot          [32]uint8 "json:\"prevStateRoot\""
	//	PostStateRoot          [32]uint8 "json:\"postStateRoot\""
	//	WithdrawalRoot         [32]uint8 "json:\"withdrawalRoot\""
	//})
	//
	//batch := eth.RPCRollupBatch{
	//	Version:                uint(rollupBatchData.Version),
	//	ParentBatchHeader:      rollupBatchData.ParentBatchHeader,
	//	BlockContexts:          rollupBatchData.BlockContexts,
	//	SkippedL1MessageBitmap: rollupBatchData.SkippedL1MessageBitmap,
	//	PrevStateRoot:          common.BytesToHash(rollupBatchData.PrevStateRoot[:]),
	//	PostStateRoot:          common.BytesToHash(rollupBatchData.PostStateRoot[:]),
	//	WithdrawRoot:           common.BytesToHash(rollupBatchData.WithdrawalRoot[:]),
	//}
	//batchInfo := new(BatchInfo)
	//err = batchInfo.ParseBatch(batch)
	//require.NoError(t, err)
}
